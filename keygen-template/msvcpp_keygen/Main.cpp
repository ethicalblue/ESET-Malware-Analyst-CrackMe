#include <Windows.h>
#include "resource.h"

#pragma comment(lib, "Winmm.lib")

HWND hMainWindow;
LONG_PTR prevWndProc;

BOOL CALLBACK EditProc(HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
	switch (uMsg)
	{
	case WM_KEYUP:
	{
		WCHAR email[255]{ 0 };
		GetDlgItemText(hMainWindow, IDC_EDIT1, email, 255);

		// Algorithm removed for copyright reasons.

		SetDlgItemText(hMainWindow, IDC_EDIT2, L"Algorithm removed for ethical reasons.");
		break;
	}
	default:
		break;
	}
	return CallWindowProc((WNDPROC)prevWndProc, hWnd, uMsg, wParam, lParam);
}

BOOL CALLBACK DialogProc(HWND hDialog, UINT uMsg, WPARAM wParam, LPARAM lParam)
{
	switch (uMsg)
	{
	case WM_INITDIALOG:
	{
		hMainWindow = hDialog;
		HWND hEdit = GetDlgItem(hDialog, IDC_EDIT1);
		prevWndProc = SetWindowLongPtrW(hEdit, GWLP_WNDPROC, (LONG_PTR)&EditProc);
		return TRUE;
	}
	case WM_COMMAND:
		switch (LOWORD(wParam))
		{
		case IDCANCEL:
			ExitProcess(0);
		}
	case WM_LBUTTONDOWN:
		SendMessage(hDialog, WM_NCLBUTTONDOWN, HTCAPTION, NULL);
		break;
	}

	return FALSE;
}

int WINAPI wWinMain(_In_ HINSTANCE hInstance,
	_In_opt_ HINSTANCE hPrevInstance,
	_In_ LPWSTR lpCmdLine, _In_ int nShowCmd)
{
	HINSTANCE hInst = GetModuleHandle(NULL);

	PlaySound(MAKEINTRESOURCE(IDR_WAVE1), hInst, SND_RESOURCE | SND_ASYNC);

	DialogBoxParam(hInst, MAKEINTRESOURCE(IDD_DIALOG1), 0, (DLGPROC)&DialogProc, 0);

	MSG uMsg;

	while (GetMessage(&uMsg, NULL, 0, 0))
	{
		TranslateMessage(&uMsg);
		DispatchMessage(&uMsg);
	}

	ExitProcess(0);
}